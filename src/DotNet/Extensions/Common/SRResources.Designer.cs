//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stize.DotNet.Extensions.Common {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SRResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SRResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Stize.DotNet.Extensions.Common.SRResources", typeof(SRResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; on type &apos;{1}&apos; returned a null value. The input stream contains collection items which cannot be added if the instance is null..
        /// </summary>
        internal static string CannotAddToNullCollection {
            get {
                return ResourceManager.GetString("CannotAddToNullCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not have an Add method. Consider using a collection type that does have an Add method - for example IList&amp;lt;T&amp;gt; or ICollection&amp;lt;T&amp;gt;..
        /// </summary>
        internal static string CollectionShouldHaveAddMethod {
            get {
                return ResourceManager.GetString("CollectionShouldHaveAddMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&amp;lt;T&amp;gt; or ICollection&amp;lt;T&amp;gt;..
        /// </summary>
        internal static string CollectionShouldHaveClearMethod {
            get {
                return ResourceManager.GetString("CollectionShouldHaveClearMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is an array. Consider adding a setter for the property..
        /// </summary>
        internal static string GetOnlyCollectionCannotBeArray {
            get {
                return ResourceManager.GetString("GetOnlyCollectionCannotBeArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must pass a lambda of the form: &apos;() =&gt; Class.Property&apos; or &apos;() =&gt; object.Property&apos;.
        /// </summary>
        internal static string LambdaFormatErrorNotParameter {
            get {
                return ResourceManager.GetString("LambdaFormatErrorNotParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; must be a collection..
        /// </summary>
        internal static string PropertyIsNotCollection {
            get {
                return ResourceManager.GetString("PropertyIsNotCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; doesn&apos;t exist on type &apos;{1}&apos;.
        /// </summary>
        internal static string PropertyMissing {
            get {
                return ResourceManager.GetString("PropertyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a boolean..
        /// </summary>
        internal static string PropertyMustBeBoolean {
            get {
                return ResourceManager.GetString("PropertyMustBeBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a DateTimeOffset or Date..
        /// </summary>
        internal static string PropertyMustBeDateTimeOffsetOrDate {
            get {
                return ResourceManager.GetString("PropertyMustBeDateTimeOffsetOrDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a string..
        /// </summary>
        internal static string PropertyMustBeString {
            get {
                return ResourceManager.GetString("PropertyMustBeString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a string with a length of 1..
        /// </summary>
        internal static string PropertyMustBeStringLengthOne {
            get {
                return ResourceManager.GetString("PropertyMustBeStringLengthOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a string with a maximum length of 1..
        /// </summary>
        internal static string PropertyMustBeStringMaxLengthOne {
            get {
                return ResourceManager.GetString("PropertyMustBeStringMaxLengthOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a Edm.TimeOfDay..
        /// </summary>
        internal static string PropertyMustBeTimeOfDay {
            get {
                return ResourceManager.GetString("PropertyMustBeTimeOfDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PropertyInfo provided must have public &apos;get&apos; and &apos;set&apos; accessor methods..
        /// </summary>
        internal static string PropertyMustHavePublicGetterAndSetter {
            get {
                return ResourceManager.GetString("PropertyMustHavePublicGetterAndSetter", resourceCulture);
            }
        }
    }
}
